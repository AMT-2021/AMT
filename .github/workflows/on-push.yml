name: Code validation
on: push
jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
      - run: mvn formatter:format
      - run: git diff
      - run: |
          [ -z "$(git status --porcelain)" ]
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Restore Maven cache
        uses: skjolber/maven-cache-github-action@v1
        with:
          step: restore
      - run: mvn clean compile
      - name: Save Maven cache
        uses: skjolber/maven-cache-github-action@v1
        with:
          step: save
      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-result
          path: target
  unit-test:
    name: Unit tests
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - uses: actions/checkout@v2
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-result
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Restore Maven cache
        uses: skjolber/maven-cache-github-action@v1
        with:
          step: restore
      - run: mvn test
  Package:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - uses: actions/checkout@v2
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-result
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
      - name: Restore Maven cache
        uses: skjolber/maven-cache-github-action@v1
        with:
          step: restore
      - run: mvn package
      - run: cp target/backend-0.0.1-SNAPSHOT.jar AMT-backend.jar
      - name: Upload package artifacts
        uses: actions/upload-artifact@v2
        with:
          name: package-artifact
          path: AMT-backend.jar
  integration-tests:
    name: Integration tests
    runs-on: ubuntu-latest
    needs: Package
      # Service containers to run with `container-job`
      services:
        # Label used to access the service container
        postgres:
          # Docker Hub image
          image: postgres
          # Provide the password for postgres
          env:
            POSTGRES_PASSWORD: admin
          # Set health checks to wait until postgres has started
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
    steps:
      - name: Download package artifacts
        uses: actions/download-artifact@v2
        with:
          path: AMT-backend.jar
      - run: |
          echo "I would be running integration tests on the release package \
          but this is not yet implemented. Note that I should not require \
          access to the code, but all my inputs should be artifacts."
          echo "Using package artifact:"
          stat AMT-backend.jar

      - name: Connect to PostgreSQL
        run: mvn test
        env:
          POSTGRES_HOST: postgres
          POSTGRES_PORT: 5432
